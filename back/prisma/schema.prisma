generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id         Int       @id @default(autoincrement())
  qd         Int
  lt         Int
  idVisitor  Int? @unique
  idResident Int?
  Resident   Resident?  @relation(fields: [idResident], references: [id])
  inside     Inside[]  @relation("AddressToInside")
  outside    Outside[] @relation("AddressToOutside")
  visitor    Visitor?  @relation(fields: [idVisitor], references: [id], map: "visitor")
}

model Resident {
  id      Int       @id @default(autoincrement())
  name    String
  cpf     String    @unique
  license String?
  idUser  Int
  Address Address[]
  inside  Inside[]
  outside Outside[]
  User    User      @relation(fields: [idUser], references: [id])
}

model User {
  id       Int        @id @default(autoincrement())
  cpf      String     @unique
  name     String
  password String
  Resident Resident[]
  Visitor  Visitor[]
}

model Visitor {
  id      Int       @id @default(autoincrement())
  name    String
  cpf     String    @unique
  license String?
  idUser  Int
  inside  Inside[]
  outside Outside[]
  idAddress Int @unique
  User    User      @relation(fields: [idUser], references: [id])
  address Address?   
}

model Inside {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  residentId Int
  visitorId  Int
  resident   Resident  @relation(fields: [residentId], references: [id])
  visitor    Visitor   @relation(fields: [visitorId], references: [id])
  Address    Address[] @relation("AddressToInside")
}

model Outside {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  residentId Int
  visitorId  Int
  resident   Resident  @relation(fields: [residentId], references: [id])
  visitor    Visitor   @relation(fields: [visitorId], references: [id])
  Address    Address[] @relation("AddressToOutside")
}
