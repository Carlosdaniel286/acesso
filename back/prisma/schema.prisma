generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model address {
  id         Int       @id @default(autoincrement())
  qd         Int
  lt         Int
  idResident Int?
  resident   resident? @relation(fields: [idResident], references: [id], map: "Address_idResident_fkey")
  inside     inside[]
  outside    outside[]

  @@index([idResident], map: "Address_idResident_fkey")
}

model inside {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  day        Int
  years      Int
  month      Int
  hours      Int
  residentId Int
  visitorId  Int
  idAddress  Int
  address    address  @relation(fields: [idAddress], references: [id], map: "Inside_idAddress_fkey")
  resident   resident @relation(fields: [residentId], references: [id], map: "Inside_residentId_fkey")
  visitor    visitor  @relation(fields: [visitorId], references: [id], map: "Inside_visitorId_fkey")

  @@index([idAddress], map: "Inside_idAddress_fkey")
  @@index([residentId], map: "Inside_residentId_fkey")
  @@index([visitorId], map: "Inside_visitorId_fkey")
}

model outside {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  day        Int
  years      Int
  month      Int
  hours      Int
  residentId Int
  idAddress  Int
  visitorId  Int
  address    address  @relation(fields: [idAddress], references: [id], map: "Outside_idAddress_fkey")
  resident   resident @relation(fields: [residentId], references: [id], map: "Outside_residentId_fkey")
  visitor    visitor  @relation(fields: [visitorId], references: [id], map: "Outside_visitorId_fkey")

  @@index([idAddress], map: "Outside_idAddress_fkey")
  @@index([residentId], map: "Outside_residentId_fkey")
  @@index([visitorId], map: "Outside_visitorId_fkey")
}

model resident {
  id      Int       @id @default(autoincrement())
  name    String
  cpf     String    @unique(map: "Resident_cpf_key")
  license String?
  image   String    @default("")
  createdAt  DateTime @default(now())
  idUser  Int
  address address[]
  inside  inside[]
  outside outside[]
  user    user      @relation(fields: [idUser], references: [id], map: "Resident_idUser_fkey")

  @@index([idUser], map: "Resident_idUser_fkey")
}

model user {
  id       Int        @id @default(autoincrement())
  cpf      String     @unique(map: "User_cpf_key")
  name     String
  password String
  image   String    @default("")
  createdAt  DateTime @default(now())
  resident resident[]
  visitor  visitor[]
}

model visitor {
  id      Int       @id @default(autoincrement())
  name    String
  cpf     String    @unique(map: "Visitor_cpf_key")
  license String?
  idUser  Int
  createdAt  DateTime @default(now())
  image   String    @default("")
  inside  inside[]
  outside outside[]
  user    user      @relation(fields: [idUser], references: [id], map: "Visitor_idUser_fkey")

  @@index([idUser], map: "Visitor_idUser_fkey")
}
